//標準 search
int bs(int *arr, int len, int target){
	int l=0, r=len, m;
    while(l<r){
    	m=(l+r)/2;
        if(arr[m]<target) l=m+1;
        else if (arr[m]>target) r=m;
        else break;
    }
    return m;
}



//標準 bound
int search(int *arr, int len, int target){
  int l=0, r=len, m;
  
  while(l<r){
    m=(l+r)/2; // m的計算要再回圈裡面
    if(arr[m]<=target) l=m+1;  //left(upper)bound（比要搜尋的數大
    else r=m;  //哪個bound 等於就放哪個
  }
  return m;
}

//problem 37, 69, 102

//Q37
#include<stdio.h>

int bs(int *arr, int len, int target){
	int l=0, r=len, m;
    while(l<r){
    	m=(l+r)/2;
        if(arr[m]<target) l=m+1;
        else if (arr[m]>target) r=m;
        else break;  //這裡沒有<=，bound 和 search 差別
    }
    return m;
}

int main(void){
	int n, t;
    int a[2000000];
    scanf("%d%d", &n, &t);
    for(int i=0; i<n; i++){
    	scanf("%d", &a[i]);
    }
    while(t--){
    	int x;
        scanf("%d", &x);
        int ans=bs(a, n, x);
        printf("%d is at index: %d \n", x, ans);
    }
}


