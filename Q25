#include<stdio.h>

long long m(long long n, long long x){
    if(x!=0){
        long long k=n%x;
        if(k>x){
            return m(k, x);
        }
        else{
            return m(x, k);
        }
    }
    else{
        //printf("x=%d\n", n);
        return n;
    }
    
}


int main(void){
    int t;
    scanf("%d", &t);
    
    while(t--){
        long long n;
        long long x1, x2, x3;
        
        scanf("%lld%lld%lld%lld", &n, &x1, &x2, &x3);
        
        long long ans=0;
        
        long long a=m(n, x1);
        long long b=m(n, x2);
        long long c=m(n, x3);
        //printf("a=%lld b=%lld c=%lld ", a, b, c);
        
        long long x=m(a,b);
        x=m(x,c);
        
        long long k;
        if((a!=b && b!=c && c!=a) ||(a==b==c)){
            k=(a/x)*(b/x)*(c/x)*x;}
        else{
            if(a==b || a==c){
                k=(b/x)*(c/x)*x;}
            else {
                k=(a/x)*(b/x)*x;}
    
        }
        //printf("k=%lld ", k);
        
        ans=n/k;
        
        
        
        printf("%lld\n", ans);
        
        
        
    }
}



______________________________________
#include<stdio.h>

long long m(long long n, long long x){
    if(x!=0){
        long long k=n%x;
        if(k>x){
            return m(k, x);
        }
        else{
            return m(x, k);
        }
    }
    else{
        //printf("x=%d\n", n);
        return n;
    }
    
}


int main(void){
    int t;
    scanf("%d", &t);
    
    while(t--){
        long long n;
        long long x1, x2, x3;
        
        scanf("%lld%lld%lld%lld", &n, &x1, &x2, &x3);
        
        /*
        //why this can
        long long N[n+1];
        for(int i=0; i<=n; i++){
            N[i]=0;
           // printf("N[%d]=%d ", i, N[i]);
        }
        */
        
        long long N[100000]={0}; //this can not
        
        long long x=m(n, x1);
        long long max1=(n/x)*(x1/x)*x;
        /*for(long long i=1; i*x1<=max; i++){
            N[i*x1%n]=N[i*x1%n]+1;
            //printf("1N[%d]=%d\n", i*x1%n, N[i*x1%n]);
        }
        */
        x=m(n, x2);
        long long max2=(n/x)*(x2/x)*x;
        /*for(long long i=1; i*x2<=max; i++){
           N[i*x2%n]=N[i*x2%n]+1;
            //printf("2N[%d]=%d\n", i*x2%n, N[i*x2%n]);
        }
        */
        
        x=m(n, x3);
        long long max3=(n/x)*(x3/x)*x;
        /*for(long long i=1; i*x3<=max; i++){
            N[i*x3%n]=N[i*x3%n]+1; // run time
            //printf("1=3N[%d]=%d\n", i*x3%n, N[i*x3%n]);
        }
        */
        
        long long ans=0;
        /*
        for(long long i=0; i<n; i++){
            if(N[i]==3){
                ans++;
            }
        }
        */
        
        long long mx=m(max1, max2);
        mx=m(max3, mx);
        long long max=(max1/mx)*(max2/mx)*(max3/mx)*mx;
        
        long long sx=m(x1, x2);
        sx=m(x3, sx);
        long long smax=(x1/sx)*(x2/sx)*(x3/sx)*sx;
        
        ans=max/smax;
        
        printf("%lld\n", ans);
        
        
        
    }
}
__________________________________
//run time
#include<stdio.h>

long long m(long long n, long long x){
    if(x!=0){
        long long k=n%x;
        if(k>x){
            return m(k, x);
        }
        else{
            return m(x, k);
        }
    }
    else{
        //printf("x=%d\n", n);
        return n;
    }
    
}


int main(void){
    int t;
    scanf("%d", &t);
    
    while(t--){
        long long n;
        long long x1, x2, x3;
        
        scanf("%lld%lld%lld%lld", &n, &x1, &x2, &x3);
        
        /*
        //why this can
        long long N[n+1];
        for(int i=0; i<=n; i++){
            N[i]=0;
           // printf("N[%d]=%d ", i, N[i]);
        }
        */
        
        long long N[100000]={0}; //this can not
        
        long long x=m(n, x1);
        long long max=(n/x)*(x1/x)*x;
        for(long long i=1; i*x1<=max; i++){
            N[i*x1%n]=N[i*x1%n]+1;
            //printf("1N[%d]=%d\n", i*x1%n, N[i*x1%n]);
        }
        
        x=m(n, x2);
        max=(n/x)*(x2/x)*x;
        for(long long i=1; i*x2<=max; i++){
           N[i*x2%n]=N[i*x2%n]+1;
            //printf("2N[%d]=%d\n", i*x2%n, N[i*x2%n]);
        }
        
        x=m(n, x3);
        max=(n/x)*(x3/x)*x;
        for(long long i=1; i*x3<=max; i++){
            N[i*x3%n]=N[i*x3%n]+1; // run time
            //printf("1=3N[%d]=%d\n", i*x3%n, N[i*x3%n]);
        }
        
        long long ans=0;
        for(long long i=0; i<n; i++){
            if(N[i]==3){
                ans++;
            }
        }
        
        printf("%lld\n", ans);
        
        
        
    }
}

