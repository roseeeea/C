//AC
//先將糖果從小排到大。
//將最小跟最大的用中間的糖果補成一樣
//如果中間有剩，將他跟小和大互相配
//大的在跟小的配（兩堆數量會一樣）
#include<stdio.h>

int main(void){
    int t;
    scanf("%d", &t);
    
    while(t--){ //10^6
        int color[3];
        for(int i=0; i<3; i++){
            scanf("%d", &color[i]);
        }
    
        for(int i=0; i<3; i++){ //氣泡排序
            for(int j=i+1; j<3; j++){
                if(color[i]>color[j]){
                    int temp=color[i];
                    color[i]=color[j];
                    color[j]=temp;
                }
            }
        }
    
    //for(int i=0; i<3; i++){ //test
        //printf("%d ", color[i]);
    //}
    
        int ans=0;
        if(color[1]>(color[2]-color[0])){
            int a=color[2]-color[0];
            ans= ans+a;
            color[1]=color[1]-a;
            color[2]=color[2]-a;
            
            if(color[1]%2==0){
                ans= ans+color[1];
                ans=ans+color[2]-color[1]/2;
            }
            else{
                ans= ans+color[1]-1;
                ans=ans+color[2]-color[1]/2;
            }
        }
        else{
            ans=ans+color[1];
            color[2]=color[2]-color[1];
            if(color[2]>=color[0]){
                ans=ans+color[0];
            }
            else{
                ans=ans+color[2];
            }
        }
            
        
        printf("%d\n", ans);
        
    }
    
    return 0;
}


__________________________________
#include<stdio.h>

int main(void){
    int t;
    scanf("%d", &t);
    
    while(t--){ //10^6
    long long color[3];
    for(int i=0; i<3; i++){
        scanf("%lld", &color[i]); //輸入糖果數值
    }
    
    for(int i=0; i<3; i++){ //氣泡排序（由小排到大）
        for(int j=i+1; j<3; j++){
            if(color[i]>color[j]){
                long long temp=color[i];
                color[i]=color[j];
                color[j]=temp;
            }
        }
    }
    
    //for(int i=0; i<3; i++){ //test：查看排列是否順利
        //printf("%d ", color[i]);
    //}
    
    long long ans=0;
     //狀況一：三者數量不一樣：將中的根大的配，小的跟大的在互配
    if(color[2]>color[1] && color[1]>color[0]){ 
        long long k=color[2]-color[1];
        ans=ans+color[1];
        if(k>color[0]){
            ans=ans+color[0];}
        else{
            ans=ans+k; }
        }     
    else{ //排列剩下情況
        if(color[0]==color[1] && color[1]!=color[2]){
            ans=color[0]*2; //這裡有bug：3,3,4
            //改成 ans=color[0]+[color[2]-color[0] if it >color[0].....
        }
        else if(color[1]==color[2] && color[0]!=color[1]){
            ans=ans+color[0];
            long long smallshare=color[1]-color[0]/2-color[0]%2;
            ans=ans+smallshare;
        }
        else{
            ans=ans+color[1]+color[1]/2;
        }
    }
    
    printf("%lld\n", ans);
    }
    
    return 0;
}
