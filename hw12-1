#include<stdio.h>
//f(i)={num of (x+y=i)}
//prefixsum

int main(void){
	int t;
    long long num[200000];
    
    scanf("%d", &t);
    
    while(t--){
        long long A, B, C, D;
        memset(num, 0, sizeof(num)); //重新初始化
        long long ans=0;
    	
        scanf("%lld%lld%lld%lld", &A, &B, &C, &D);
        
        for(int i=A; i<=B; i++){ //差值，num of x+y=i概念
        	num[i+B]++; //x fixed 最小值
            num[i+C+1]--; //x fixed y最大值 加一
        }
        
        for(int i=A+B; i<=B+C+1; i++){
        	num[i]=num[i]+num[i-1]; //差值轉成實值
        }
        
          for(int i=A+B; i<=B+C+1; i++){
        	num[i]=num[i]+num[i-1]; 
	//prefix: A+B截至i的類型數量總和
        }
        
        for(int i=C; i<=D; i++){
        	if(B+C>i){ // x+y的最大值是否大於 i(z)最小值 
                ans=ans+num[B+C]-num[i];
                //加起來（B+C）以前 的數量減掉未達或等於第三邊的量
            }
        }
        
        printf("%lld\n", ans);
        
    }
}
----------------------------------------
#include<stdio.h>
//f(i)={num of (x+y=i)}
//prefixsum

int main(void){
	int t;
    long long num[200000];
    
    scanf("%d", &t);
    
    while(t--){
        long long A, B, C, D;
        memset(num, 0, sizeof(num)); //重新初始化
        long long ans=0;
    	
        scanf("%lld%lld%lld%lld", &A, &B, &C, &D);
        
        for(int i=A; i<=B; i++){ //差值，num of x+y=i概念
        	num[i+B]++; //x fixed 最小值
            num[i+C+1]--; //x fixed y最大值 加一
        }
        
        for(int i=A+B; i<=B+C+1; i++){
        	num[i]=num[i]+num[i-1]; //prefixsum
        }
        
        /*
          for(int i=A+B; i<=B+C+1; i++){
        	num[i]=num[i]+num[i-1]; //prefixsum
        }
        */
        
        for(int z=C; z<=D; z++){
        	/*
            if(B+C>i){ // x+y的最大值是否大於 i(z)最小值 
                ans=ans+num[B+C]-num[i];
                //加起來（B+C）以前 的數量減掉未達或等於第三邊的量
            }
            */
            //這樣runtime
            for(int k=A+B; k<=B+C; k++){
            	if(z<k){
                	ans=ans+num[k];
                }
            }
            
        }
        
        printf("%lld\n", ans);
        
    }
}
______________________________________________________
#include<stdio.h>

long long a[4]={0};
long long ans=0;

void triangle(int x, long long len){
	if(x<3){
    	for(long long i=a[x-1]; i<=a[x]; i++){
            //printf("x=%d, i=%d, len=%d\n", x, i, len+i);
            triangle(x+1, len+i);
        }
    }
    else if(x>=3){
        //printf("a[%d]=%d\n", 3, a[x-1]);
        if(len>a[x-1]){ //len可以大於a[x]
          //printf("sucess\n");
          if(len>a[x]) ans=ans+a[x]-a[x-1]+1;
          else ans=ans+len-a[x-1];  //不是ans+a[x]-len
          //printf("current ans=%d\n", ans);
          return;
        }
        else{
        //printf("fail: x=%d, len=%d\n", x, len);
        }
    }
}


int main(void){
    int t;
    scanf("%d", &t);
    while(t--){
   	 	scanf("%lld%lld%lld%lld", &a[0], &a[1], &a[2], &a[3]);
        triangle(1, 0);
        printf("%lld\n", ans);
        ans=0;
    }
    
}


_________________________________
#include<stdio.h>

long long a[4]={0};
long long ans=0;

void triangle(int x, long long len){
	if(x<3){
    	for(long long i=a[x-1]; i<=a[x]; i++){
            //printf("len=%d\n", len);
            triangle(x+1, len+i);
        }
    }
    else if(x>=3){
        if(len>a[x-1] && len<a[x]){ //len可以大於a[x]
            //printf("x=%d, ways=%d\n", x, a[x]-len);
            ans=ans+a[x]-len;
            return;
        }
        else{
        	return;
        }
    }
}


int main(void){
    int t;
    scanf("%d", &t);
    while(t--){
   	 	scanf("%lld%lld%lld%lld", &a[0], &a[1], &a[2], &a[3]);
        triangle(1, 0);
        printf("%lld\n", ans);
        ans=0;
    }
    
}
