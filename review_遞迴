//n! n階 遞迴
long long factorial(long long n){
  if(n>0){
    return n*factorial(n-1);
  }
  else{
    return 1; //0!=1
  }
}

//((1+2)*3+4)*5+6.......
int show_parenthesis(int n){
  int ans;
  if(n==1){
    printf("1");
    ans=1;
  }
  else{
    if(n%2==1){
      ans=ans*n;
      printf(")*");
    }
    else{
      ans=ans+n;
      printf("+ ");
    }
    printf("%d", n);
  }
  return ans;
}

//hanoi
void hanoi(char start, char end, char buffer, int t){
  if(t==0){
    return;
  }
  else{
    hanoi(start, buffer, end, n-1);
    printf("move the top disk from tower &c to tower %c", start, end);
    hanoi(buffer, end, start, n-1);
  }
}

//最大公因數gcd
int gcd(int a, int b){
  if(b==0){
    return a;
  }
  else{
    return gcd(b, a%b);
  }
}

/*用三種幣值組合total
#include<stdio.h>

int total=0;
int v[3]; //c>b>a

int count(int total, int i){
    int a=0;
    if(i>0){
        int t=total/v[i];
        for(int k=0; k<=t; k++){
            if((total-v[i]*k)!=0){
                a=a+count(total-v[i]*k, i-1);
            }
            else{
                a++;
            }
        }
    }
    else{
        if(total%v[0]==0){
            a=1;
        }
        else{
            a=0;
        }
    }
    return a;
}

int main(void){
    scanf("%d%d%d%d", &total, &v[2], &v[1], &v[0]);
    int ans=count(total, 2);
    printf("%d\n", ans);
}
*/

